#!/bin/sh

###
### Author: Alfredo Mungo <chimeranet89@gmail.com>
###

### BEGIN INIT INFO
# Provides: $local_fs
#
# Default-Start: S
#
# Default-Stop: 0 6
#
# Short-Description: Mounts/unmounts local filesystems
#
# Description:
#  Mounts and unmounts local filesystems, including.
#
#  CAUTION: Never call this script manually
#
### END INIT INFO

declare -r ACTION=$1
declare -r FSTAB=/etc/fstab
declare -r MTAB=/etc/mtab
declare -r UTMPFILE=/var/run/utmp
declare -r PROCMOUNTS=/proc/mounts

. /lib/lsb/init-functions

if [[ ! $# -eq 1 ]]; then
  log_failure_msg "Invalid number of arguments"
  exit 2 # Invalid number of arguments
fi

case $ACTION in
start )
  mkdir -p /proc /dev/{pts,shm} /var/run
  [[ ! -L $MTAB ]] && [[ -r $PROCMOUNTS ]] && rm -f $MTAB && ln -s $PROCMOUNTS $MTAB

  UTMP=$(<$UTMPFILE)

  # IF fstab is provided, mount the specified partitions
  [[ -r $FSTAB ]] && mount -a

  # Let utmp survive mounting on its directory
  echo "$UTMP" >$UTMPFILE
  ;;
stop )
  # If mtab does not exis, try linking it to mounts
  if [[ ! -r $MTAB ]] && [[ -f $PROCMOUNTS ]]; then
    log_warning_msg "$MTAB not found. Linking to ${PROCMOUNTS}..."
    ln -s $PROCMOUNTS $MTAB
  else
    log_failure_msg "No $MTAB or $PROCMOUNTS found."
  fi

  # Umount filesystems
  if [[ ! -r $MTAB ]]; then
    # DO NOT umount /proc and /dev
    umount -n /dev/shm
    umount -n /dev/pts
    umount -n /sys
    umount -n /var/run
    umount -n /tmp
  else
    umount -a
  fi

  # Disable swap
  swapoff -a

  # If there is no fstab, try to find / in mtab
  if [[ -r $FSTAB ]]; then
    ROOTDEV=
  else
    if [[ -r $MTAB ]]; then
      for mpoint in $(awk '$2 == "/" { print $1; }' <$MTAB); do
        [[ -b $mpoint ]] && ROOTDEV=$mpoint
      done
    else
      log_error_msg "Unable to retrieve root device, root directory might be not be correctly unmounted."
    fi
  fi

  # Close all the open file descriptors
  for fd in /proc/$$/*; do
    exec $fd>&-
  done

  # Remount root read-only
  CONSOLE=/dev/null
  [[ -c /dev/console ]] && CONSOLE=/dev/console

  mount -no remount,ro $ROOTDEV / >/dev/null 2>$CONSOLE

  # Flush drive buffers
  sync
  ;;
restart )
  # Avoid remounting everything
  exit 3 # Unimplemented feature
  ;;
force-reload )
  exit 3 # Unimplemented feature
  ;;
status )
  exit 4 # Unknown status
  ;;
reload | try-restart )
  exit 3 # Unimplemented feature
  ;;
* )
  log_failure_msg "Invalid action"
  exit 2 # Invalid argument
esac

exit 0 # All ok
