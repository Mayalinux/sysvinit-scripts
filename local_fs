#!/bin/sh

###
### Author: Alfredo Mungo <chimeranet89@gmail.com>
###

### BEGIN INIT INFO
# Provides: $local_fs
#
# Default-Start: S
#
# Default-Stop: 0 6
#
# Short-Description: Mounts/unmounts local filesystems
#
# Description:
#  Mounts and unmounts local filesystems, including;
#   - The proc filesystem (not unmounted)
#   - The sysfs filesystem
#   - The devpts filesystem
#   - Swap filesystems
#   - /etc/fstab and /etc/mtab filesystems
#   - Root filesystem
#   - /var/run filesystem
#	
#   NOTE: If /etc/fstab exists, other filesystems are skipped during
#         mount operation.
#   NOTE: If /etc/mtab exists, other filesystems are skipped during
#         umount operation.
#   CAUTION: Never call this script manually
#
### END INIT INFO

ACTION=$1
FSTAB=/etc/fstab
MTAB=/etc/mtab
ROOTDEV=/dev/sdb1
UTMPFILE=/var/run/utmp

. /lib/lsb/init-functions

if [[ ! $# -eq 1 ]]; then
	log_failure_msg "Invalid number of arguments"
	exit 2 # Invalid number of arguments
fi

case $ACTION in
start )
	mkdir -p /proc /dev/{pts,shm} /sys /var/run
	truncate -c -s 0 $MTAB
	UTMP=$(<$UTMPFILE)

	# Fallback is no fstab is provided, otherwise mount them all
	if [[ ! -r $FSTAB ]]; then
		mount -t proc none /proc
		mount -t devpts none /dev/pts
		mount -t sysfs none /sys
		mount -t tmpfs none /var/run
		mount -t tmpfs none /tmp
	else
		mount -a
	fi

	# Let utmp survive mounting on its directory
	echo "$UTMP" >$UTMPFILE
	;;
stop )
	if [[ ! -r $MTAB ]]; then
		# DO NOT umount /proc
		umount -n /dev/pts
		umount -n /sys
		umount -n /var/run
		umount -n /tmp
	else
		umount -a
		swapoff -a
	fi

	# Close the log file descriptor
	# FIXME: Add code to close ALL file descriptors (/dev/fd)
	exec 3>&-

	# Remount root read-only
	mount -n -o remount,ro $ROOTDEV /
	sync
	;;
restart )
	# Avoid remounting everything
	;;
force-reload )
	exit 3 
	;;
status )
	exit 4 # Unknown status
	;;
reload | try-restart )
	exit 3 # Unimplemented feature
	;;
* )
	log_failure_msg "Invalid action"
	exit 2 # Invalid argument
esac

exit 0 # All ok
